{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from \"../components/Layout\";\nimport React from \"react\";\nimport Notification from \"../components/Notification\";\n\nclass Any extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      title: \"\",\n      list: [],\n      editMode: false,\n      idToEdit: -1,\n      showNotification: false,\n      selectedElement: \"\"\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", e => {\n      e.preventDefault();\n      const {\n        list,\n        title,\n        editMode,\n        idToEdit\n      } = this.state;\n\n      if (title.trim() !== \"\") {\n        if (editMode) {\n          const copyList = [...list];\n          copyList[idToEdit] = title;\n          this.setState({\n            list: [...copyList]\n          });\n        } else {\n          this.setState({\n            list: [...list, title]\n          });\n        }\n\n        this.setState({\n          title: \"\",\n          editMode: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleDelete\", l => {\n      const {\n        list\n      } = this.state;\n      this.setState({\n        list: list.filter((_, i) => l !== i),\n        showNotification: true,\n        selectedElement: list.find((_, i) => l === i)\n      });\n      setTimeout(() => {\n        this.setState(() => ({\n          showNotification: false\n        }));\n      }, 3000);\n    });\n\n    _defineProperty(this, \"handleEdit\", index => {\n      const {\n        list\n      } = this.state;\n\n      if (index > -1) {\n        const selectedElement = list.find((_, id) => id === index);\n\n        if (selectedElement) {\n          this.setState({\n            editMode: true,\n            idToEdit: index,\n            title: selectedElement\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    const {\n      showNotification,\n      title,\n      list,\n      selectedElement\n    } = this.state;\n    return __jsx(Layout, null, __jsx(\"div\", {\n      className: \"jsx-2921116136\" + \" \" + \"container\"\n    }, showNotification && __jsx(Notification, {\n      title: `${selectedElement} has been deleted!`\n    }), __jsx(\"h1\", {\n      className: \"jsx-2921116136\"\n    }, \"Welcome to To do\"), __jsx(\"p\", {\n      className: \"jsx-2921116136\"\n    }, \"Application to do something!\"), __jsx(\"p\", {\n      className: \"jsx-2921116136\"\n    }, \"Todos:\", list.length), list.length === 0 ? __jsx(\"p\", {\n      className: \"jsx-2921116136\" + \" \" + \"emptyTodo\"\n    }, \"You do not have todos...lets add one!\") : null, __jsx(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"jsx-2921116136\"\n    }, __jsx(\"label\", {\n      htmlFor: \"exampleInputEmail1\",\n      className: \"jsx-2921116136\"\n    }, \"Title:\"), __jsx(\"input\", {\n      autoComplete: \"off\",\n      name: \"title\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: title,\n      id: \"exampleInputEmail1\",\n      placeholder: \"Enter todo...\",\n      className: \"jsx-2921116136\" + \" \" + \"form-control\"\n    })), __jsx(\"ul\", {\n      class: \"list-group\",\n      className: \"jsx-2921116136\"\n    }, list.map((item, l) => __jsx(\"li\", {\n      class: \"list-group-item\",\n      key: l,\n      className: \"jsx-2921116136\"\n    }, __jsx(\"h4\", {\n      className: \"jsx-2921116136\"\n    }, item), __jsx(\"div\", {\n      className: \"jsx-2921116136\"\n    }, __jsx(\"img\", {\n      src: \"/edit.png\",\n      alt: \"edit\",\n      onClick: () => this.handleEdit(l),\n      className: \"jsx-2921116136\" + \" \" + 'icon'\n    }), __jsx(\"img\", {\n      src: \"/delete.png\",\n      alt: \"delete\",\n      onClick: () => this.handleDelete(l),\n      className: \"jsx-2921116136\"\n    })))))), __jsx(_JSXStyle, {\n      id: \"2921116136\"\n    }, [\".container.jsx-2921116136{position:relative;}\", \".form-control.jsx-2921116136{margin-bottom:0.6em;}\", \"form.jsx-2921116136 label.jsx-2921116136{margin:0.5em;}\", \"ul.jsx-2921116136{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0;}\", \".icon.jsx-2921116136{margin-right:10px;}\", \"li.jsx-2921116136{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:.5em 1em;background-color:#fff;border-radius:0.2em;margin-bottom:0.6em;border:0.1em solid rgba(197,239,247,1);}\", \"button.jsx-2921116136{color:#fff;background-color:#007bff;border-color:#007bff;}\", \".emptyTodo.jsx-2921116136{color:#732d00;background-color:#f8ddcc;border-color:#f5d0b8;padding-right:4rem;padding:0.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:0.25rem;}\", \"img.jsx-2921116136{cursor:pointer;}\"]));\n  }\n\n}\n\nexport default Any;","map":null,"metadata":{},"sourceType":"module"}